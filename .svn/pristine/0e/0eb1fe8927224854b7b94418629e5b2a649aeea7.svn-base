using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Net.Sockets;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace CSharpClientApplication
{
    public partial class FormMain : Form
    {
        public static Client client = null;

        public static String ipAddressServer = "127.0.0.1";
        public static int port = 8001;

        public FormMain()
        {
            InitializeComponent();

            menuStrip_Update();

            initTreeViewChatRooms();
            initTreeViewClients();
            
        }

        public void initTreeViewChatRooms()
        {
            this.treeViewChatRooms.NodeMouseDoubleClick += treeViewChatRooms_NodeMouseDoubleClick;
        }

        public void initTreeViewClients()
        {
            this.treeViewClients.NodeMouseDoubleClick += treeViewClients_NodeMouseDoubleClick;
        }

        /***** GETTER *****/
        public bool Connected
        {
            get
            {
                if (FormMain.client != null)
                {
                    return true;
                }
                else return false;
            }
        }
        /******************/

        /***** TREE VIEW *****/
        private void treeViewChatRooms_NodeMouseDoubleClick(object sender, TreeNodeMouseClickEventArgs e)
        {
            TreeNode treeNode = (TreeNode)e.Node;

            // Si c'est un chat room
            if (treeNode.Level == 1)
            {
                MessageBox.Show("Ceci est un Chat Room");

                FormChatRoom formChatRoom = new FormChatRoom();
                formChatRoom.Show();
            }
            // Sinon si c'est un client
            else if (treeNode.Level == 2)
            {
                MessageBox.Show("Ceci est un Client");
            }
        }

        private void treeViewClients_NodeMouseDoubleClick(object sender, TreeNodeMouseClickEventArgs e)
        {
            TreeNode treeNode = (TreeNode)e.Node;

            // Si c'est un client
            if (treeNode.Level == 1)
            {
                MessageBox.Show("Ceci est un Client");
            }
        }

        private void createNewChatRoom(string chatRoomName)
        {
            TreeNode newTreeNode = new TreeNode(chatRoomName);

            this.treeViewChatRooms.Nodes[0].Nodes.Add(newTreeNode);
        }
        /******************/

        /***** MENU STRIP *****/
        private void quitToolStripMenuItem_Click(object sender, EventArgs e)
        {
            System.Environment.Exit(0);
        }

        private void connectToolStripMenuItem_Click(object sender, EventArgs e)
        {
            if (!Connected)
            {
                if (FormMain.ipAddressServer != null || FormMain.port != -1)
                {
                    FormConnection formConnection = new FormConnection();
                    formConnection.OnCreateConnectingClient += formConnection_OnCreateConnectingClient;
                    formConnection.ShowDialog();
                }
                else
                {
                    MessageBox.Show("Please first configure the server.\nGo to Menu > Parameters > Server IP Address.");
                }
            }
            else
            {
                // On coupe toutes les connexions

                FormMain.client = null;
            }

            menuStrip_Update();
        }

        private void newChatRoomToolStripMenuItem_Click(object sender, EventArgs e)
        {
            FormNewRoom formNewRoom = new FormNewRoom();
            formNewRoom.OnCreateNewChatRoom += formNewRoom_OnCreateNewChatRoom;
            formNewRoom.ShowDialog();
        }

        /*********************/

        /***** DELEGATES *****/
        private void formConnection_OnCreateConnectingClient(Client client)
        {
            if (client != null)
            {
                FormMain.client = client;
                this.Text = FormMain.client.UserName + " - Chat";
            }
            else
            {
                MessageBox.Show("Error while trying to connect...");
            }
        }

        private void formNewRoom_OnCreateNewChatRoom(string chatRoomName)
        {
            if (chatRoomName != null)
            {
                createNewChatRoom(chatRoomName);

                this.treeViewChatRooms.ExpandAll();
            }
        }

        private void formIPServer_OnConfiguringServer(string ip, int port)
        {
            FormMain.ipAddressServer = ip;
            FormMain.port = port;
        }
        /********************/

        /***** VUES *****/
        private void menuStrip_Update()
        {
            if (Connected)
            {
                ToolStripMenuItem menuItem = (ToolStripMenuItem)MainMenuStrip.Items[0];
                foreach (ToolStripItem item in menuItem.DropDownItems)
                {
                    if (item.Name == "connectToolStripMenuItem")
                    {
                        item.Text = "Disconnect...";
                    }
                    else if (item.Name == "newChatRoomToolStripMenuItem")
                    {
                        item.Visible = true;
                    }
                }
            }
            else
            {
                ToolStripMenuItem menuItem = (ToolStripMenuItem)MainMenuStrip.Items[0];
                foreach (ToolStripItem item in menuItem.DropDownItems)
                {
                    if (item.Name == "connectToolStripMenuItem")
                    {
                        item.Text = "Connect...";
                    }
                    else if (item.Name == "newChatRoomToolStripMenuItem")
                    {
                        item.Visible = false;
                    }
                }
            }
        }

        private void serverIPAddressToolStripMenuItem_Click(object sender, EventArgs e)
        {
            FormIPServer formIPServer = new FormIPServer(ipAddressServer, port);

            formIPServer.OnConfiguringServer += formIPServer_OnConfiguringServer;

            formIPServer.ShowDialog();
        }
        /****************/
    }
}
