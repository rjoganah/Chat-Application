using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Net.Sockets;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace CSharpClientApplication
{
    public partial class FormMain : Form
    {
        public static string rightClicked = null;
        public static Client client = null;

        public static String ipAddressServer = "127.0.0.1";
        public static int port = 8001;

        private List<FormChatRoom> listFormChatRoom;
        private List<FormChatPrivate> listFormChatPrivate;

        private bool finish = false;

        private Thread t;

        public FormMain()
        {
            InitializeComponent();

            menuStrip_Update();

            initTreeViewChatRooms();
            initTreeViewClients();

            listFormChatRoom = new List<FormChatRoom>();
            listFormChatPrivate = new List<FormChatPrivate>();

            this.FormClosing += FormMain_FormClosing;
        }

        private void FormMain_FormClosing(object sender, FormClosingEventArgs e)
        {
            // On coupe toutes les connexions
            foreach (FormChatRoom chatRoom in this.listFormChatRoom)
            {
                chatRoom.Close();
            }

            foreach (FormChatPrivate privateChatRoom in this.listFormChatPrivate)
            {
                privateChatRoom.Close();
            }

            listFormChatRoom.Clear();
            listFormChatPrivate.Clear();

            this.treeViewChatRooms.Nodes[0].Nodes.Clear();
            this.treeViewClients.Nodes[0].Nodes.Clear();
            if (client != null)
            {
                ChatLib.MessageChat msg = new ChatLib.MessageChat(ChatLib.MessageType.DisconnectFromServer, client.UserName, null, null);
                ChatLib.ChatLib.SendMessage(client.ClientSocket, msg);
            }
        }

        public void receiveMessageFromServer()
        {
            byte[] buf = new byte[ChatLib.ChatLib.MESSAGE_MAX_SIZE];
            ChatLib.MessageChat msg = null;

            while (true)
            {
                if (!finish)
                {
                    try
                    {
                        int nbBytes = client.ClientSocket.Receive(buf);

                        if (nbBytes > 0)
                        {
                            if (client.Connected && client.ClientSocket.Connected)
                            {
                                System.Diagnostics.Debug.WriteLine("FormMain received");

                                try
                                {
                                    msg = ChatLib.ChatLib.createMessageFromString(ChatLib.ChatLib.GetString(buf, nbBytes));
                                    System.Diagnostics.Debug.WriteLine(msg.MessageType);

                                    switch (msg.MessageType)
                                    {
                                        case ChatLib.MessageType.ChatRoomExit:
                                            if (msg.ContentMessage == "true")
                                            {
                                                this.Invoke((MethodInvoker)delegate
                                                {
                                                    listFormChatRoom.Remove(listFormChatRoom.Find(x => x.ChatRoomName == msg.TargetName));
                                                });
                                            }
                                            
                                            break;

                                        case ChatLib.MessageType.PrivateChatExit:
                                            if (msg.ContentMessage == "true")
                                            {
                                                this.Invoke((MethodInvoker)delegate
                                                {
                                                    listFormChatPrivate.Remove(listFormChatPrivate.Find(x => x.PrivateChatName == msg.TargetName));
                                                });
                                            }
                                            break;

                                        case ChatLib.MessageType.ChatRoomJoin:
                                            if (msg.ContentMessage == "true")
                                            {
                                                this.Invoke((MethodInvoker)delegate
                                                {
                                                    if (!listFormChatRoom.Exists(x => x.ChatRoomName == msg.TargetName))
                                                    {
                                                        listFormChatRoom.Add(new FormChatRoom(msg.TargetName));
                                                    }

                                                    listFormChatRoom.Find(x => x.ChatRoomName == msg.TargetName).Show();
                                                });
                                            }
                                            break;

                                        //case ChatLib.MessageType.PrivateChatJoin:
                                        //    if (msg.ContentMessage == "true")
                                        //    {
                                        //        this.Invoke((MethodInvoker)delegate
                                        //        {
                                        //            if (!listFormChatPrivate.Exists(x => x.PrivateChatName == msg.TargetName))
                                        //            {
                                        //                listFormChatPrivate.Add(new FormChatPrivate(msg.TargetName));
                                        //            }

                                        //            listFormChatPrivate.Find(x => x.PrivateChatName == msg.TargetName).Show();
                                        //        });
                                        //    }
                                        //    break;

                                        //case ChatLib.MessageType.PrivateChatCreate:
                                        //    if (msg.ContentMessage == "true")
                                        //    {
                                        //        this.Invoke((MethodInvoker)delegate
                                        //        {
                                        //            FormChatPrivate formChatPrivate = new FormChatPrivate(msg.TargetName);
                                        //            formChatPrivate.Show();
                                        //        });
                                        //    }

                                        //    break;

                                        case ChatLib.MessageType.ChatRoomCreate:
                                            if (msg.ContentMessage == "true")
                                            {
                                                this.Invoke((MethodInvoker)delegate
                                                {
                                                    this.formNewRoom_OnCreateNewChatRoom(msg.TargetName);
                                                });
                                            }

                                            break;

                                        case ChatLib.MessageType.ClientChatRoomMessage:
                                            // Checker parmis toutes les chat room ouvert dans lesquels le client est co
                                            // Forward le message à cette chat room
                                            if (listFormChatRoom.Exists(x => x.ChatRoomName == msg.TargetName))
                                            {
                                                this.Invoke((MethodInvoker)delegate
                                                {
                                                    FormChatRoom chat = listFormChatRoom.Find(x => x.ChatRoomName == msg.TargetName);
                                                    chat.OnReceivedMessage(msg);
                                                });
                                            }

                                            break;

                                        case ChatLib.MessageType.UpdateConnectedUsersInChatRoom:

                                            if (listFormChatRoom.Exists(x => x.ChatRoomName == msg.TargetName))
                                            {
                                                this.Invoke((MethodInvoker)delegate
                                                {
                                                    FormChatRoom chat = listFormChatRoom.Find(x => x.ChatRoomName == msg.TargetName);
                                                    chat.UpdateConnectedUsersInChatRoom(msg);
                                                });
                                            }

                                            break;
                                        case ChatLib.MessageType.UpdateChatRoomList:

                                            foreach (string chatRoom in msg.ContentMessage.Split('\\'))
                                            {
                                                //string[] users = chatRooms.Split('#');
                                                //string chatRoom = users[0];

                                                if (chatRoom.Length > 0 && !this.listFormChatRoom.Exists(x => x.ChatRoomName == chatRoom))
                                                {
                                                    this.Invoke((MethodInvoker)delegate
                                                    {
                                                        this.formNewRoom_OnCreateNewChatRoom(chatRoom);
                                                    });
                                                }

                                                //if (users.Count() > 1)
                                                //{
                                                //    TreeNode tn = this.treeViewChatRooms.Nodes[0].Nodes.Cast<TreeNode>().Where(r => r.Text == chatRoom).ElementAt(0);

                                                //    for (int i = 1; i < users.Count() - 1; i++)
                                                //    {
                                                //        if (tn.Nodes.Count > 0)
                                                //        {
                                                //            TreeNode node = tn.Nodes.Cast<TreeNode>().Where(r => r.Text == users[i]).ElementAt(0);

                                                //            if (!tn.Nodes.Contains(node))
                                                //            {
                                                //                this.Invoke((MethodInvoker)delegate
                                                //                {
                                                //                    tn.Nodes.Add(users[i]);
                                                //                });
                                                //            }
                                                //        }
                                                //        else
                                                //        {
                                                //            this.Invoke((MethodInvoker)delegate
                                                //            {
                                                //                tn.Nodes.Add(users[i]);
                                                //            });
                                                //        }
                                                //    }
                                                //}
                                            }
                                            break;

                                        case ChatLib.MessageType.ClientPrivateMessage:

                                            if (listFormChatPrivate.Exists(x => x.PrivateChatName == msg.SenderName))
                                            {
                                                this.Invoke((MethodInvoker)delegate
                                                {
                                                    FormChatPrivate chat = listFormChatPrivate.Find(x => x.PrivateChatName == msg.SenderName);
                                                    chat.OnReceivedMessage(msg);
                                                });
                                            }
                                            break;

                                        case ChatLib.MessageType.UpdateConnectedUsers:
                                            string[] users = msg.ContentMessage.Split('\\');

                                            this.Invoke((MethodInvoker)delegate
                                               {
                                                   this.treeViewClients.Nodes[0].Nodes.Clear();

                                                   foreach (string s in users)
                                                   {
                                                       System.Diagnostics.Debug.WriteLine(s);

                                                       if (s.Length > 0 && s != client.UserName)
                                                       {
                                                           this.treeViewClients.Nodes[0].Nodes.Add(new TreeNode(s));
                                                       }
                                                   }

                                                   this.treeViewClients.ExpandAll();
                                               });
                                            break;

                                        case ChatLib.MessageType.DisconnectFromServer:
                                            if (msg.ContentMessage == "true")
                                            {
                                                FormMain.client = null;

                                                finish = true;
                                                this.Invoke((MethodInvoker)delegate
                                              {
                                                  this.Text = "Chat Application";
                                                  this.menuStrip_Update();
                                              });

                                                return;
                                            }
                                            break;
                                    }
                                }
                                catch (JsonReaderException)
                                {
                                }
                            }
                            else return;
                        }
                    }
                    catch (SocketException)
                    {
                    }
                }
                else return;
            }
        }

        public void initTreeViewChatRooms()
        {
            this.treeViewChatRooms.NodeMouseDoubleClick += treeViewChatRooms_NodeMouseDoubleClick;
            this.treeViewChatRooms.NodeMouseClick += treeViewChatRooms_NodeMouseClick;
        }

        private void treeViewChatRooms_NodeMouseClick(object sender, TreeNodeMouseClickEventArgs e)
        {
            if (e.Button == System.Windows.Forms.MouseButtons.Right)
            {
                if (e.Node.Level == 1)
                {
                    rightClicked = e.Node.Text;
                    rightClickChatRoomMenuStrip.Show(this, new Point(e.X, e.Y));
                }
            }
        }

        public void initTreeViewClients()
        {
            this.treeViewClients.NodeMouseDoubleClick += treeViewClients_NodeMouseDoubleClick;
        }

        /***** GETTER *****/
        public bool Connected
        {
            get
            {
                if (FormMain.client != null)
                {
                    return true;
                }
                else return false;
            }
        }
        /******************/

        /***** TREE VIEW *****/
        private void treeViewChatRooms_NodeMouseDoubleClick(object sender, TreeNodeMouseClickEventArgs e)
        {
            TreeNode treeNode = (TreeNode)e.Node;

            // Si c'est un chat room
            if (treeNode.Level == 1)
            {
                ChatLib.MessageChat msg = new ChatLib.MessageChat(ChatLib.MessageType.ChatRoomJoin, client.UserName, null, treeNode.Text);
                ChatLib.ChatLib.SendMessage(client.ClientSocket, msg);
            }
        }

        private void treeViewClients_NodeMouseDoubleClick(object sender, TreeNodeMouseClickEventArgs e)
        {
            TreeNode treeNode = (TreeNode)e.Node;

            // Si c'est un client
            if (treeNode.Level == 1)
            {
                if (!listFormChatPrivate.Exists(x => x.PrivateChatName == treeNode.Text))
                {
                    listFormChatPrivate.Add(new FormChatPrivate(treeNode.Text));
                }

                listFormChatPrivate.Find(x => x.PrivateChatName == treeNode.Text).Show();


                //ChatLib.MessageChat msg = new ChatLib.MessageChat(ChatLib.MessageType.PrivateChatCreate, client.UserName, treeNode.Text, null);
                //ChatLib.ChatLib.SendMessage(client.ClientSocket, msg);
            }
        }

        private void createNewChatRoom(string chatRoomName)
        {
            TreeNode newTreeNode = new TreeNode(chatRoomName);

            this.treeViewChatRooms.Nodes[0].Nodes.Add(newTreeNode);
        }
        /******************/

        /***** MENU STRIP *****/
        private void quitToolStripMenuItem_Click(object sender, EventArgs e)
        {
            // On coupe toutes les connexions
            foreach (FormChatRoom chatRoom in this.listFormChatRoom)
            {
                chatRoom.Close();
            }

            foreach (FormChatPrivate privateChatRoom in this.listFormChatPrivate)
            {
                privateChatRoom.Close();
            }

            listFormChatRoom.Clear();
            listFormChatPrivate.Clear();

            this.treeViewChatRooms.Nodes[0].Nodes.Clear();
            this.treeViewClients.Nodes[0].Nodes.Clear();

            ChatLib.MessageChat msg = new ChatLib.MessageChat(ChatLib.MessageType.DisconnectFromServer, client.UserName, null, null);
            ChatLib.ChatLib.SendMessage(client.ClientSocket, msg);

            System.Environment.Exit(0);
        }

        private void connectToolStripMenuItem_Click(object sender, EventArgs e)
        {
            if (!Connected)
            {
                if (FormMain.ipAddressServer != null || FormMain.port != -1)
                {
                    finish = false;
                    FormConnection formConnection = new FormConnection();
                    formConnection.OnCreateConnectingClient += formConnection_OnCreateConnectingClient;
                    formConnection.ShowDialog();
                }
                else
                {
                    MessageBox.Show("Please first configure the server.\nGo to Menu > Parameters > Server IP Address.");
                }
            }
            else
            {
                // On coupe toutes les connexions
                foreach (FormChatRoom chatRoom in this.listFormChatRoom)
                {
                    chatRoom.Close();
                }

                foreach (FormChatPrivate privateChatRoom in this.listFormChatPrivate)
                {
                    privateChatRoom.Close();
                }

                listFormChatRoom.Clear();
                listFormChatPrivate.Clear();

                this.treeViewChatRooms.Nodes[0].Nodes.Clear();
                this.treeViewClients.Nodes[0].Nodes.Clear();

                ChatLib.MessageChat msg = new ChatLib.MessageChat(ChatLib.MessageType.DisconnectFromServer, client.UserName, null, null);
                ChatLib.ChatLib.SendMessage(client.ClientSocket, msg);
            }

            menuStrip_Update();
        }

        private void newChatRoomToolStripMenuItem_Click(object sender, EventArgs e)
        {
            FormNewRoom formNewRoom = new FormNewRoom();
            formNewRoom.ShowDialog();
        }

        /*********************/

        /***** DELEGATES *****/
        private void formConnection_OnCreateConnectingClient(Client client)
        {
            if (client != null)
            {
                FormMain.client = client;
                this.Text = FormMain.client.UserName + " - Chat Application";

                t = new Thread(new ThreadStart(receiveMessageFromServer));
                t.IsBackground = false;
                t.Start();
            }
            else
            {
                MessageBox.Show("Error while trying to connect...");
            }
        }

        private void formNewRoom_OnCreateNewChatRoom(string chatRoomName)
        {
            if (chatRoomName != null)
            {
                createNewChatRoom(chatRoomName);

                listFormChatRoom.Add(new FormChatRoom(chatRoomName));

                this.treeViewChatRooms.ExpandAll();
            }
        }

        private void formIPServer_OnConfiguringServer(string ip, int port)
        {
            FormMain.ipAddressServer = ip;
            FormMain.port = port;
        }
        /********************/

        /***** VUES *****/
        private void menuStrip_Update()
        {
            if (Connected)
            {
                ToolStripMenuItem menuItem = (ToolStripMenuItem)MainMenuStrip.Items[0];
                foreach (ToolStripItem item in menuItem.DropDownItems)
                {
                    if (item.Name == "connectToolStripMenuItem")
                    {
                        item.Text = "Disconnect...";
                    }
                    else if (item.Name == "newChatRoomToolStripMenuItem")
                    {
                        item.Visible = true;
                    }
                }
            }
            else
            {
                ToolStripMenuItem menuItem = (ToolStripMenuItem)MainMenuStrip.Items[0];
                foreach (ToolStripItem item in menuItem.DropDownItems)
                {
                    if (item.Name == "connectToolStripMenuItem")
                    {
                        item.Text = "Connect...";
                    }
                    else if (item.Name == "newChatRoomToolStripMenuItem")
                    {
                        item.Visible = false;
                    }
                }
            }
        }

        private void serverIPAddressToolStripMenuItem_Click(object sender, EventArgs e)
        {
            FormIPServer formIPServer = new FormIPServer(ipAddressServer, port);

            formIPServer.OnConfiguringServer += formIPServer_OnConfiguringServer;

            formIPServer.ShowDialog();
        }

        private void deleteToolStripMenuItem_Click(object sender, EventArgs e)
        {
            ChatLib.MessageChat msg = new ChatLib.MessageChat(ChatLib.MessageType.ChatRoomDelete, client.UserName, rightClicked, null);
            ChatLib.ChatLib.SendMessage(client.ClientSocket, msg);
        }
        /****************/
    }
}
