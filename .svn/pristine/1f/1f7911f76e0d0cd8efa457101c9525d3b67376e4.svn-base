using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Net.Sockets;
using System.Net;
using ChatLib;
using System.Threading;

namespace CSharpServerApplication
{
    class Program
    {
        public static int port = 8001;

        public static List<Socket> socketList;
        public static Socket serverSocket;

        //Bind socket to server ip address and Listen to an available port
        public static Socket setServerSocket()
        {
            Socket serverSocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
            int choix = 0;
            
            IPHostEntry ipHostEntry = Dns.GetHostEntry(Dns.GetHostName());
            
            //On prend uniquement une adresse IPV4 (Ne marche pas pour les IPV 6 car le serverSocket est initialisé en mode InterNetwork, pas en InterNetworkV6)
            IPAddress ipAddress = null;     
            foreach (IPAddress ipAdd in ipHostEntry.AddressList)
            {
                if (ipAdd.AddressFamily.Equals(AddressFamily.InterNetwork))
                {
                    ipAddress = ipAdd;
                }
            }
            IPEndPoint localEndPoint = null;
            do
            {
                Console.WriteLine("1. Enter the IP address of the server");
                Console.WriteLine("2. Automatic IP");
                Console.Write("Your choice : ");
                choix = int.Parse(Console.ReadLine());
                Console.Clear();
 
            } while (choix != 1 && choix !=2);
            switch (choix)
            {
                case 1:
                    ipAddress = IPAddress.Parse("127.0.0.1");
                    localEndPoint = new IPEndPoint(ipAddress, port);
                    
                    break;
                case 2: localEndPoint = new IPEndPoint(ipAddress, port);
                    break;
            }
            serverSocket.Bind(localEndPoint);

            serverSocket.Listen(50);

            System.Console.WriteLine("Listening to: " + ipAddress);

            return serverSocket;
        }

        public static void connectionEstablishment()
        {
            while (true)
            {
                Socket newSocket = null;

                newSocket = serverSocket.Accept();

                System.Console.WriteLine("Connection Accepted");

                if (newSocket != null)
                {
                    socketList.Add(newSocket);
                }
               
                //get the name, the password and check it ? Et après que fait on ?...
                //Dans une nouvelle Thread ?
                Thread socketConnection = new Thread(new ParameterizedThreadStart(launchNewSocketConnection));
                socketConnection.Start(newSocket);
                
            }
        }

        private static void launchNewSocketConnection(object obj)
        {
            while (true)
            {
                Socket newSocket = (Socket)obj;
                if (newSocket != null)
                {
                    String slt = "ccc";
                    newSocket.Send(ChatLib.ChatLib.GetBytes(slt));
                    byte[] salut = new byte[50];
                    slt = ChatLib.ChatLib.GetString(salut);
                    newSocket.Receive(salut);
                    Console.WriteLine(ChatLib.ChatLib.GetString(salut));

                }
            }
        }

        static void Main(string[] args)
        {
            ChatLib.ChatLib chat = new ChatLib.ChatLib();
            socketList = new List<Socket>();

            serverSocket = setServerSocket();
            
            Thread connection = new Thread(connectionEstablishment);

            connection.Start();
        }
    }
}
